[{"__type__":"cc.SpriteFrame","content":{"name":"default_btn_disabled","texture":"71VhFCTINJM6/Ky3oX9nBT","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}},[{"__type__":"cc.SceneAsset","_name":"helloworld","scene":{"__id__":1},"asyncLoadAssets":null},{"__type__":"cc.Scene","_name":"New Node","_children":[{"__id__":2}],"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"autoReleaseAssets":false},{"__type__":"cc.Node","_name":"Canvas","_parent":{"__id__":1},"_children":[{"__id__":3},{"__id__":4},{"__id__":5},{"__id__":7},{"__id__":13}],"_components":[{"__type__":"cc.Canvas","node":{"__id__":2}},{"__type__":"cc.Widget","node":{"__id__":2},"_alignFlags":45},{"__type__":"67d06dVnktC3auGCcb5cnks","node":{"__id__":2},"content":{"__id__":5},"slider":{"__id__":17},"oldRender":{"__id__":10},"grayRender":{"__id__":12}}],"_color":{"__type__":"cc.Color","r":252,"g":252,"b":252},"_contentSize":{"__type__":"cc.Size","width":960,"height":640},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[480,320,0,0,0,0,1,1,1,1]},"_id":"a286bbGknJLZpRpxROV6M94"},{"__type__":"cc.Node","_name":"Main Camera","_parent":{"__id__":2},"_components":[{"__type__":"cc.Camera","node":{"__id__":3},"_clearFlags":7,"_depth":-1}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,383.835370914286,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"background","_parent":{"__id__":2},"_components":[{"__type__":"cc.Widget","node":{"__id__":4},"_alignFlags":45,"_originalWidth":200,"_originalHeight":150},{"__type__":"cc.Sprite","node":{"__id__":4},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"41D7kWhyFGY7q4NDlzkazn"},"_type":1,"_sizeMode":0}],"_color":{"__type__":"cc.Color","r":27,"g":38,"b":46},"_contentSize":{"__type__":"cc.Size","width":960,"height":640},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"content","_parent":{"__id__":2},"_children":[{"__id__":6}],"_components":[{"__type__":"cc.Layout","node":{"__id__":5},"_layoutSize":{"__type__":"cc.Size","width":200,"height":200},"_resize":1,"_N$layoutType":2},{"__type__":"cc.Widget","node":{"__id__":5},"_alignFlags":34,"_right":100}],"_contentSize":{"__type__":"cc.Size","width":200,"height":200},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[280,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cocos","_parent":{"__id__":5},"_components":[{"__type__":"cc.Sprite","node":{"__id__":6},"_materials":[{"__uuid__":"abMqjLgjBPh7JpqF/AtzKY"}],"_spriteFrame":{"__uuid__":"49zgyyIwtMlrdUcW9LT7gZ"},"_type":1,"_sizeMode":0}],"_contentSize":{"__type__":"cc.Size","width":200,"height":200},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"content","_parent":{"__id__":2},"_children":[{"__id__":8},{"__id__":9},{"__id__":11}],"_components":[{"__type__":"cc.Layout","node":{"__id__":7},"_layoutSize":{"__type__":"cc.Size","width":600,"height":200},"_resize":1,"_N$layoutType":1},{"__type__":"cc.Widget","node":{"__id__":7},"_alignFlags":9,"_left":20,"_right":456.355,"_top":20,"_verticalCenter":169.388}],"_contentSize":{"__type__":"cc.Size","width":600,"height":200},"_anchorPoint":{"__type__":"cc.Vec2","y":0.5},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[-460,200,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cocos","_parent":{"__id__":7},"_components":[{"__type__":"cc.Sprite","node":{"__id__":8},"_materials":[{"__uuid__":"6a6CwCRoVObrHs9hGmBUKj"}],"_spriteFrame":{"__uuid__":"49zgyyIwtMlrdUcW9LT7gZ"},"_type":1,"_sizeMode":0},{"__type__":"cc.Widget","node":{"__id__":8},"_alignFlags":9}],"_contentSize":{"__type__":"cc.Size","width":200,"height":200},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[100,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cocos copy","_parent":{"__id__":7},"_components":[{"__id__":10},{"__type__":"cc.Widget","node":{"__id__":9},"_alignFlags":9,"_left":200}],"_contentSize":{"__type__":"cc.Size","width":200,"height":200},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[300,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Sprite","node":{"__id__":9},"_materials":[{"__uuid__":"3dHN3m4xhNdYkqiKaVzSUD"}],"_spriteFrame":{"__uuid__":"49zgyyIwtMlrdUcW9LT7gZ"},"_type":1,"_sizeMode":0},{"__type__":"cc.Node","_name":"cocos copy","_parent":{"__id__":7},"_components":[{"__id__":12},{"__type__":"cc.Widget","node":{"__id__":11},"_alignFlags":9,"_left":400}],"_contentSize":{"__type__":"cc.Size","width":200,"height":200},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[500,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Sprite","node":{"__id__":11},"_materials":[{"__uuid__":"3dHN3m4xhNdYkqiKaVzSUD"},{"__uuid__":"6a6CwCRoVObrHs9hGmBUKj"}],"_spriteFrame":{"__uuid__":"49zgyyIwtMlrdUcW9LT7gZ"},"_type":1,"_sizeMode":0},{"__type__":"cc.Node","_name":"New Slider","_parent":{"__id__":2},"_children":[{"__id__":14},{"__id__":15}],"_components":[{"__id__":17},{"__type__":"cc.Widget","node":{"__id__":13},"_alignFlags":10,"_left":100}],"_contentSize":{"__type__":"cc.Size","width":300,"height":20},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[-230,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Background","_objFlags":512,"_parent":{"__id__":13},"_components":[{"__type__":"cc.Sprite","node":{"__id__":14},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"312JYturtOx74Zjp9UpOqZ"},"_type":1,"_sizeMode":0}],"_contentSize":{"__type__":"cc.Size","width":300,"height":20},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Handle","_objFlags":512,"_parent":{"__id__":13},"_components":[{"__type__":"cc.Sprite","node":{"__id__":15},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_type":1,"_sizeMode":2},{"__id__":16}],"_contentSize":{"__type__":"cc.Size","width":32,"height":32},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,0]}},{"__type__":"cc.Button","node":{"__id__":15},"_normalMaterial":{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"},"zoomScale":1.1,"_N$enableAutoGrayEffect":true,"_N$transition":3,"transition":3,"_N$pressedColor":{"__type__":"cc.Color","r":255,"g":255,"b":255},"pressedColor":{"__type__":"cc.Color","r":255,"g":255,"b":255},"_N$disabledColor":{"__type__":"cc.Color","r":255,"g":255,"b":255},"_N$normalSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_N$pressedSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"pressedSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_N$hoverSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"hoverSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_N$disabledSprite":{"__uuid__":"29FYIk+N1GYaeWH/q1NxQO"},"_N$target":{"__id__":15}},{"__type__":"cc.Slider","node":{"__id__":13},"slideEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":2},"_componentId":"67d06dVnktC3auGCcb5cnks","handler":"onSlider"}],"_N$handle":{"__id__":16}}],{"__type__":"cc.SpriteFrame","content":{"name":"default_scrollbar","texture":"02kcE0s9pAmLe145ftvpR/","rect":[0,0,30,15],"offset":[0,0],"originalSize":[30,15],"capInsets":[10,4,10,4]}},{"__type__":"cc.Material","_name":"Gray","_effectAsset":{"__uuid__":"95bLksmiFDUqMc8mBqu0SO"},"_techniqueData":{"0":{"defines":{"USE_TEXTURE":true,"ENABLE_OLD":true,"ENABLE_GRAY":true},"props":{"grayLev":0,"oldLev":0}}}},{"__type__":"cc.SpriteFrame","content":{"name":"singleColor","texture":"a8Anh32NZGRZegUtSgEj26","rect":[0,0,2,2],"offset":[0,0],"originalSize":[2,2],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"freedom","texture":"6fyH0uPv5Aq7a2XpI5NF2g","rect":[0,0,755,755],"offset":[0,0],"originalSize":[755,755],"capInsets":[0,0,0,0]}},{"__type__":"cc.EffectAsset","_name":"CirclePortrait2","techniques":[{"passes":[{"blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"value":[0.5],"type":13}},"program":"CirclePortrait2|vs|fs"}]}],"shaders":[{"hash":4066417885,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  vec2 uv = v_uv0.xy - vec2(0.5, 0.5);\n  float len = length(vec2(abs(uv.x), abs(uv.y)));\n  if(len > 0.4) {\n    if(len < 0.5) {\n      o.a = 1.0 - smoothstep(0., 0.1, len - 0.4);\n    } else {\n      o.a = 0.;\n    }\n  }\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  vec2 uv = v_uv0.xy - vec2(0.5, 0.5);\n  float len = length(vec2(abs(uv.x), abs(uv.y)));\n  if(len > 0.4) {\n    if(len < 0.5) {\n      o.a = 1.0 - smoothstep(0., 0.1, len - 0.4);\n    } else {\n      o.a = 0.;\n    }\n  }\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"],"binding":0}],"samplers":[{"name":"texture","type":29,"count":1,"defines":["USE_TEXTURE"],"binding":30}],"record":null,"name":"CirclePortrait2|vs|fs"}]},{"__type__":"cc.Material","_name":"CirclePortrait2","_effectAsset":{"__uuid__":"625Jy/0zNJhqmphtWCXaek"},"_techniqueData":{"0":{"defines":{"USE_TEXTURE":true}}}},{"__type__":"cc.EffectAsset","_name":"Gray","techniques":[{"passes":[{"blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"value":[0.5],"type":13},"oldLev":{"value":[1],"editor":{"tooltip":"老化程度","range":[-2,2]},"type":13},"grayLev":{"value":[1],"editor":{"tooltip":"灰化程度","range":[-5,5]},"type":13}},"program":"Gray|vs|fs"}]}],"shaders":[{"hash":956674703,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if ENABLE_OLD\nuniform OldLevel {\n  float oldLev;\n};\nvec4 getOldColor(vec4 color) {\n  float r = 0.393 * color.r + 0.769 * color.g + 0.189 * color.b;\n  float g = 0.349 * color.r + 0.686 * color.g + 0.168 * color.b;\n  float b = 0.272 * color.r + 0.534 * color.g + 0.131 * color.b;\n  return vec4(r, g, b, color.a);\n}\n#endif\n#if ENABLE_GRAY\nuniform GrayLevel {\n  float grayLev;\n};\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if ENABLE_OLD\n    vec4 srcColor = o;\n    vec4 oldColor = getOldColor(srcColor);\n    o = mix(srcColor, oldColor, oldLev);\n  #endif\n  #if ENABLE_GRAY\n    vec4 srcColor2 = o;\n    float gray = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n    vec4 grayColor = vec4(gray, gray, gray, o.a);\n    o = mix(srcColor2, grayColor, grayLev);\n  #endif\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if ENABLE_OLD\nuniform float oldLev;\nvec4 getOldColor(vec4 color) {\n  float r = 0.393 * color.r + 0.769 * color.g + 0.189 * color.b;\n  float g = 0.349 * color.r + 0.686 * color.g + 0.168 * color.b;\n  float b = 0.272 * color.r + 0.534 * color.g + 0.131 * color.b;\n  return vec4(r, g, b, color.a);\n}\n#endif\n#if ENABLE_GRAY\nuniform float grayLev;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if ENABLE_OLD\n    vec4 srcColor = o;\n    vec4 oldColor = getOldColor(srcColor);\n    o = mix(srcColor, oldColor, oldLev);\n  #endif\n  #if ENABLE_GRAY\n    vec4 srcColor2 = o;\n    float gray = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n    vec4 grayColor = vec4(gray, gray, gray, o.a);\n    o = mix(srcColor2, grayColor, grayLev);\n  #endif\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ENABLE_OLD","type":"boolean","defines":[]},{"name":"ENABLE_GRAY","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"],"binding":0},{"name":"OldLevel","members":[{"name":"oldLev","type":13,"count":1}],"defines":["ENABLE_OLD"],"binding":1},{"name":"GrayLevel","members":[{"name":"grayLev","type":13,"count":1}],"defines":["ENABLE_GRAY"],"binding":2}],"samplers":[{"name":"texture","type":29,"count":1,"defines":["USE_TEXTURE"],"binding":30}],"record":null,"name":"Gray|vs|fs"}]},{"__type__":"cc.Material","_name":"CirclePortrait","_effectAsset":{"__uuid__":"f8DlO7io1KNp/lDAWBEx6M"},"_techniqueData":{"0":{"defines":{"USE_TEXTURE":true,"ENABLE_CIRCLEPORTRAIT":true},"props":{"radius":0.5}}}},{"__type__":"cc.SpriteFrame","content":{"name":"default_radio_button_off","texture":"56fc2Ai/RFNYpaMT8crweK","rect":[3,3,26,26],"offset":[0,0],"originalSize":[32,32],"capInsets":[0,0,0,0]}},{"__type__":"cc.EffectAsset","_name":"CirclePortrait","techniques":[{"passes":[{"blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"value":[0.5],"type":13},"radius":{"value":[1],"editor":{"tooltip":"圆角半径"},"type":13}},"program":"CirclePortrait|vs|fs"}]}],"shaders":[{"hash":216731814,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if ENABLE_CIRCLEPORTRAIT\nuniform RoundCorner {\n  float radius;\n};\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if ENABLE_CIRCLEPORTRAIT\n  float circleRadius = clamp(0.0, 0.5, radius);\n  vec2 uv = v_uv0.xy - vec2(0.5, 0.5);\n  float rx = abs(uv.x) - (0.5 - circleRadius);\n  float ry = abs(uv.y) - (0.5 - circleRadius);\n  float mx = step((0.5 - circleRadius), abs(uv.x));\n  float my = step((0.5 - circleRadius), abs(uv.y));\n  float len = length(vec2(abs(rx), abs(ry)));\n  float a = 1.0 - mx * my * step(circleRadius, len) * smoothstep(0., circleRadius * 0.01, len - circleRadius);\n  o = vec4(o.rgb, o.a * a);\n  #endif\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if ENABLE_CIRCLEPORTRAIT\nuniform float radius;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if ENABLE_CIRCLEPORTRAIT\n  float circleRadius = clamp(0.0, 0.5, radius);\n  vec2 uv = v_uv0.xy - vec2(0.5, 0.5);\n  float rx = abs(uv.x) - (0.5 - circleRadius);\n  float ry = abs(uv.y) - (0.5 - circleRadius);\n  float mx = step((0.5 - circleRadius), abs(uv.x));\n  float my = step((0.5 - circleRadius), abs(uv.y));\n  float len = length(vec2(abs(rx), abs(ry)));\n  float a = 1.0 - mx * my * step(circleRadius, len) * smoothstep(0., circleRadius * 0.01, len - circleRadius);\n  o = vec4(o.rgb, o.a * a);\n  #endif\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ENABLE_CIRCLEPORTRAIT","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"],"binding":0},{"name":"RoundCorner","members":[{"name":"radius","type":13,"count":1}],"defines":["ENABLE_CIRCLEPORTRAIT"],"binding":1}],"samplers":[{"name":"texture","type":29,"count":1,"defines":["USE_TEXTURE"],"binding":30}],"record":null,"name":"CirclePortrait|vs|fs"}]}]